{"version":3,"sources":["views/Pets.js","views/Pet.js","views/NewPet.js","views/EditPet.js","App.js","reportWebVitals.js","index.js"],"names":["Pets","props","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","to","map","p","name","type","_id","Pet","setMsg","id","style","width","margin","description","skillOne","skillTwo","skillThree","onClick","event","delete","navigate","NewPets","setName","setType","setDescription","setSkillOne","setSkillTwo","setSkillThree","errors","setErrors","onSubmit","preventDefault","newPet","post","response","handleSubmit","color","message","onChange","target","value","pet","EditPet","put","App","from","noThrow","path","NewPet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c45ca5ab.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"@reach/router\";\nimport axios from \"axios\";\n\nconst Pets = (props) => {\n  const [pets, setPets] = useState([]);\n\n  /* \n  Empty arr as second argument means this will only happen on the first render\n  of this component.\n  */\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/api/pets\")\n      .then((res) => {\n        setPets(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleDelete = (pToDel) => {\n    axios\n      .delete(\"http://localhost:8000/api/pets/\" + pToDel._id)\n      .then((res) => {\n        const filteredPets = pets.filter((p) => {\n          return p !== pToDel;\n        });\n\n        // Update state to remove the item so the component re-renders.\n        setPets(filteredPets);\n        // console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <table>\n      <h1>Pet Shelter</h1>\n      <h3>These pets are looking for a good home</h3>\n      <Link to=\"/pets/new\">add a pet to the shelter</Link>\n      <div>\n      <th>Name</th>\n      <th>Type</th>\n      <th>Actions</th>\n      {pets.map((p) => {\n        return (\n          <tr>\n            <td>{p.name}</td>\n            <td>{p.type}</td>\n            <td><Link to={`/pets/${p._id}`}>details</Link>{\" \"} \n              | <Link to={`/pets/${p._id}/edit`}>edit</Link>{\" \"}</td>\n          </tr>\n        );\n      })}\n      </div>\n    </table>\n  );\n};\n\nexport default Pets;","import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport { Link, navigate } from \"@reach/router\";\n\nconst Pet = (props) => {\n  const [p, setMsg] = useState({});\n\n  const handleDelete = () => {\n    axios\n      .delete(\"http://localhost:8000/api/pets/\" + props.id)\n      .then((res) => {\n        navigate(\"/pets\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  /* \n  Get the current data from DB to display.\n  */\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/api/pets/\" + props.id)\n      .then((res) => {\n        console.log(res);\n        setMsg(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.id]);\n\n  return (\n    <div style={{ width: \"50%\", margin: \"0 auto\" }}>\n      <h1>Pet Shelter</h1>\n      <h3>Details about: {p.name}</h3>\n      <h5>Pet Type: {p.type}</h5>\n      <h5>Pet Description: {p.description}</h5>\n      <h5>Pet Skills: {p.skillOne}, {p.skillTwo}, {p.skillThree}</h5>\n      <div>\n        <button\n          onClick={(event) => {\n            handleDelete();\n          }}\n        >\n          Adopt {p.name}\n        </button>\n      </div>\n      <hr />\n      <Link to=\"/pets\">back to home</Link>\n    </div>\n  );\n};\n\nexport default Pet;","import React, { useState } from \"react\";\n\nimport axios from \"axios\";\nimport { navigate } from \"@reach/router\";\nimport { Link } from \"@reach/router\";\n\nconst NewPets = (props) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newPet = {\n      name: name,\n      type: type,\n      description: description,\n      skillOne: skillOne,\n      skillTwo: skillTwo,\n      skillThree: skillThree,\n    };\n\n    axios\n      .post(\"http://localhost:8000/api/pets\", newPet)\n      .then((res) => {\n        navigate(\"/pets\");\n        console.log(res);\n      })\n      .catch((err) => {\n        /* \n        For validation errors to be caught here, you need\n        res.status(400).json(err) in the controller.\n        To get validation errors for the edit form, you can do the same as this\n        including the conditional rendering below.\n        */\n        console.log(err.response.data.errors);\n        setErrors(err.response.data.errors);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Pet Shelter</h1>\n      <h3>These pets are looking for a good home</h3>\n      <Link to=\"/pets\">back to home</Link>\n\n      <form\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div>\n          <label>Pet Name: </label>\n          {errors?.name && (\n            <span style={{ color: \"red\" }}>{errors?.name?.message}</span>\n          )}\n          <input\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n\n        <div>\n          <label>Pet Type: </label>\n          {errors?.type && (\n            <span style={{ color: \"red\" }}>{errors?.type?.message}</span>\n          )}\n          <input\n            onChange={(event) => {\n              setType(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n\n        <div>\n          <label>Pet Description: </label>\n          {errors?.description && (\n            <span style={{ color: \"red\" }}>\n              {errors?.description?.message}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n\n        <p>Skills(Optional):</p>\n\n        <div>\n          <label>Skill 1: </label>\n          {errors?.skillOne && (\n            <span style={{ color: \"red\" }}>\n              {errors?.skillOne?.pet}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setSkillOne(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n\n        <div>\n          <label>Skill 2: </label>\n          {errors?.skillTwo && (\n            <span style={{ color: \"red\" }}>\n              {errors?.skillTwo?.pet}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setSkillTwo(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n        \n        <div>\n          <label>Skill 3: </label>\n          {errors?.skillThree && (\n            <span style={{ color: \"red\" }}>\n              {errors?.skillThree?.pet}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setSkillThree(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n        \n        <button>Add Pet</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPets;","import React, { useEffect, useState } from \"react\";\n\nimport { Link, navigate } from \"@reach/router\";\n\nimport axios from \"axios\";\n\nconst EditPet = (props) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n  /* \n  Empty arr as second argument means this will only happen on the first render\n  of this component.\n  Get the current data from DB to pre-fill input boxes.\n  */\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/api/pets/\" + props.id)\n      .then((res) => {\n        setName(res.data.name);\n        setType(res.data.type);\n        setDescription(res.data.description);\n        setSkillOne(res.data.skillOne);\n        setSkillTwo(res.data.skillTwo);\n        setSkillThree(res.data.skillThree);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.id]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newPet = {\n      name: name,\n      type: type,\n      description: description,\n      skillOne: skillOne,\n      skillTwo: skillTwo,\n      skillThree: skillThree,\n\n    };\n\n    axios\n      .put(\"http://localhost:8000/api/pets/\" + props.id, newPet)\n      .then((res) => {\n        navigate(\"/pets/\" + props.id);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err.response.data.errors);\n        setErrors(err.response.data.errors);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Pet Shelter</h1>\n      <h3>Edit {name}</h3>\n      <form\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div>\n          <label>Name: </label>\n          {errors?.name && (\n            <span style={{ color: \"red\" }}>{errors?.name?.message}</span>\n          )}\n          <input\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n            type=\"text\"\n            value={name}\n          />\n        </div>\n\n        <div>\n          <label>Type: </label>\n          {errors?.name && (\n            <span style={{ color: \"red\" }}>{errors?.type?.message}</span>\n          )}\n          <input\n            onChange={(event) => {\n              setType(event.target.value);\n            }}\n            type=\"text\"\n            value={type}\n          />\n        </div>\n\n        <div>\n          <label>Description: </label>\n          {errors?.name && (\n            <span style={{ color: \"red\" }}>{errors?.description?.message}</span>\n          )}\n          <input\n            onChange={(event) => {\n              setDescription(event.target.value);\n            }}\n            type=\"text\"\n            value={description}\n          />\n        </div>\n\n        <p>Skills(Optional):</p>\n\n        <div>\n          <label>Skill 1: </label>\n          {errors?.skillOne && (\n            <span style={{ color: \"red\" }}>\n              {errors?.skillOne?.pet}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setSkillOne(event.target.value);\n            }}\n            type=\"text\"\n            value={skillOne}\n          />\n        </div>\n\n        <div>\n          <label>Skill 2: </label>\n          {errors?.skillTwo && (\n            <span style={{ color: \"red\" }}>\n              {errors?.skillTwo?.pet}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setSkillTwo(event.target.value);\n            }}\n            type=\"text\"\n            value={skillTwo}\n          />\n        </div>\n        \n        <div>\n          <label>Skill 3: </label>\n          {errors?.skillThree && (\n            <span style={{ color: \"red\" }}>\n              {errors?.skillThree?.pet}\n            </span>\n          )}\n          <input\n            onChange={(event) => {\n              setSkillThree(event.target.value);\n            }}\n            type=\"text\"\n            value={skillThree}\n          />\n        </div>\n        <button>Edit Pet</button>\n      </form>\n      <Link to=\"/pets\">back to home</Link>\n    </div>\n  );\n};\n\nexport default EditPet;","import { Link, Redirect, Router } from \"@reach/router\";\n\nimport \"./App.css\";\n\nimport Pets from \"./views/Pets\";\nimport Pet from \"./views/Pet\";\nimport NewPet from \"./views/NewPet\";\nimport EditPet from \"./views/EditPet\";\n\nfunction App() {\n  return (\n    <div style={{ width: \"80%\", margin: \"0 auto\" }}>\n      {/* <nav style={{ textAlign: \"center\" }}>\n        <Link to=\"/pets\">Pets</Link>{\" \"}\n        <Link to=\"/pets/new\">New Pet</Link>\n        <hr />\n      </nav> */}\n\n      <Router>\n        <Redirect from=\"/\" to=\"/pets\" noThrow=\"true\" />\n        <Pets path=\"/pets\" />\n        <Pet path=\"/pets/:id\" />\n        <NewPet path=\"/pets/new\" />\n        <EditPet path=\"/pets/:id/edit\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}